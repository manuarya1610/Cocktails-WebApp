{"version":3,"sources":["components/Button.js","components/Hero.js","pages/Home.js","components/Loading.js","components/Header.js","pages/SingleCocktail.js","pages/Error.js","components/Navbar.js","context.js","components/Cocktail.js","components/CocktailList.js","pages/Search.js","pages/RandomPage.js","App.js","index.js"],"names":["Button","props","React","createElement","Link","to","link","className","text","Hero","animation","useRef","useGSAP","ALPHABETS_SIZES","randomLetter","lett","letters","indexOf","res","Math","floor","random","length","textWrapper","document","querySelectorAll","selection","allLetters","textContent","match","letter","innerHTML","concat","newLetter","status","gsap","timeline","duration","yPercent","stagger","amount","ease","from","ref","Home","Loading","class","Header","SingleCocktail","id","useParams","loading","setLoading","useState","cocktail","setCocktail","useEffect","async","response","fetch","data","json","drinks","strMeasure1","strMeasure2","strMeasure3","strMeasure4","strMeasure5","strMeasure6","strMeasure7","strMeasure8","strMeasure9","strMeasure10","strMeasure11","strMeasure12","strMeasure13","strMeasure14","strMeasure15","strDrink","name","strDrinkThumb","image","strAlcoholic","info","strGlass","glass","strInstructions","instructions","strIngredient1","strIngredient2","strIngredient3","strIngredient4","strIngredient5","strIngredient6","strIngredient7","strIngredient8","strIngredient9","strIngredient10","strIngredient11","strIngredient12","strIngredient13","strIngredient14","strIngredient15","ingredients","error","console","log","getCocktail","measures","src","alt","map","item","index","key","Error","Navbar","AppContext","createContext","url","AppProvider","_ref","children","searchTerm","setSearchTerm","cocktails","setCocktails","fetchDrinks","useCallback","newCocktails","idDrink","Provider","value","useGlobalContext","useContext","Cocktail","img","width","height","xmlns","fill-rule","clip-rule","d","CocktailList","Object","assign","Search","searchValue","type","onChange","current","placeholder","RandomPage","App","Router","Routes","Route","path","element","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.940f8857.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Button = (props) => {\n  return (\n    <Link to={props.link} className=\"button\">\n      <div className=\"button__line\"></div>\n      <div className=\"button__line\"></div>\n      <span className=\"button__text\">{props.text}</span>\n      <div className=\"button__drow1\"></div>\n      <div className=\"button__drow2\"></div>\n    </Link>\n  );\n};\n\nexport default Button;\n","import { useGSAP } from \"@gsap/react\";\nimport gsap from \"gsap\";\nimport React, { useRef } from \"react\";\n\nconst Hero = () => {\n  const animation = useRef();\n\n  useGSAP(() => {\n    const alpha15 = \"ijl\";\n    const alpha20 = \"frtz\";\n    const alpha30 = \"acehknosuvxy\";\n    const alpha35 = \"bdgpq\";\n    const alpha50 = \"mw\";\n\n    const ALPHA15 = \"I\";\n    const ALPHA30 = \"EFLTZ\";\n    const ALPHA35 = \"BPRSXY\";\n    const ALPHA40 = \"KACDGHNUV\";\n    const ALPHA50 = \"MOQ\";\n    const ALPHA55 = \"W\";\n\n    const ALPHABETS_SIZES = [ALPHA35, ALPHA40];\n\n    // TODO: FACTORISE THIS CODE\n    let randomLetter = (lett) => {\n      for (var letters of ALPHABETS_SIZES) {\n        if (letters.indexOf(lett) != -1) {\n          let res = letters[Math.floor(Math.random() * letters.length)];\n          while (res == lett)\n            res = letters[Math.floor(Math.random() * letters.length)];\n          return [res, true];\n        }\n      }\n      return [\".\", false];\n    };\n\n    let textWrapper = document.querySelectorAll(\".line_text\");\n    // console.log(textWrapper)\n\n    for (var selection of textWrapper) {\n      var allLetters = selection.textContent.match(/[\\S\\x20]/g);\n\n      selection.innerHTML = \"\";\n      for (var letter of allLetters) {\n        // keep white space between words\n        if (letter.match(/\\x20/g)) {\n          selection.innerHTML += ` `;\n        }\n        // don't replace special characters\n        else if (letter.match(/[\\x21-\\x40\\x5B-\\x60\\x7B-\\x7E]/g)) {\n          selection.innerHTML += `<div data-char='.' class='letter'>${letter}</div>`;\n        }\n        // lowercase -> change font\n        else if (letter.match(/[a-z]/g)) {\n          selection.innerHTML += `<div data-char='.' class='letter lowercase'>${letter}</div>`;\n        }\n        // replace each letter with its appropriate size\n        else {\n          let [newLetter, status] = randomLetter(letter);\n\n          if (status)\n            selection.innerHTML += `<div data-char=${newLetter} class='letter'>${letter}</div>`;\n          else\n            selection.innerHTML += `<div data-char='.' class='letter'>${letter}</div>`;\n        }\n      }\n    }\n\n    let tl = gsap.timeline();\n\n    var animation = tl\n      .to(\".line_text .letter\", {\n        duration: 2,\n        yPercent: -100,\n        stagger: {\n          // amount: total time\n          // each: each pause\n          amount: 0.5,\n          // from: 'start'\n        },\n        ease: \"expo.out\",\n      })\n\n      .to(\n        \"h1 div:not([data-char='.'])\",\n        {\n          duration: 2,\n          yPercent: -200,\n          stagger: {\n            amount: 1,\n            from: \"edges\",\n          },\n          ease: \"expo.out\",\n        },\n        \"<0.5\"\n      );\n  });\n  return (\n    <div ref={animation} className=\"onloadpage\">\n      <div className=\"linerow\">\n        <h1 className=\"line_text\">BESPOKE</h1>\n        <h1 className=\"line_text line_text2\">COCKTAILS</h1>\n      </div>\n      <div className=\"linerow linerow2\">\n        <h1 className=\"line_text\">right at HOME</h1>\n      </div>\n    </div>\n  );\n};\n\nexport default Hero;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"../components/Button\";\nimport Hero from \"../components/Hero\";\n\nexport default function Home() {\n  return (\n    <div className=\"landing-page\">\n      <Hero />\n      <div className=\"choose-drink\">\n        <div className=\"choose-drink-text\">\n          <div className=\"choose-txt-1\">Find</div>\n          <div className=\"choose-txt-2\">Your</div>\n          <div className=\"choose-txt-3\">Drink</div>\n        </div>\n        <div className=\"button-container\">\n          <Button text=\"Surprise Me\" link=\"/random\" />\n          <Button text=\"Let's Search\" link=\"/search\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nconst Loading = () => {\n  return <span class=\"loader\"></span>;\n};\n\nexport default Loading;\n","import { useGSAP } from \"@gsap/react\";\nimport gsap from \"gsap\";\nimport React, { useRef } from \"react\";\nconst Header = (props) => {\n  const animation = useRef();\n\n  useGSAP(() => {\n    // FONT PLUS JAKARTA SANS SIZING\n    const alpha15 = \"ijl\";\n    const alpha20 = \"frtz\";\n    const alpha30 = \"acehknosuvxy\";\n    const alpha35 = \"bdgpq\";\n    const alpha50 = \"mw\";\n\n    const ALPHA15 = \"I\";\n    const ALPHA30 = \"EFLTZ\";\n    const ALPHA35 = \"BPRSXY\";\n    const ALPHA40 = \"KACDGHNUV\";\n    const ALPHA50 = \"MOQ\";\n    const ALPHA55 = \"W\";\n\n    const ALPHABETS_SIZES = [ALPHA35, ALPHA40];\n\n    // TODO: FACTORISE THIS CODE\n    let randomLetter = (lett) => {\n      for (var letters of ALPHABETS_SIZES) {\n        if (letters.indexOf(lett) != -1) {\n          let res = letters[Math.floor(Math.random() * letters.length)];\n          while (res == lett)\n            res = letters[Math.floor(Math.random() * letters.length)];\n          return [res, true];\n        }\n      }\n      return [\".\", false];\n    };\n\n    let textWrapper = document.querySelectorAll(\".search-line_text\");\n    // console.log(textWrapper)\n\n    for (var selection of textWrapper) {\n      var allLetters = selection.textContent.match(/[\\S\\x20]/g);\n\n      selection.innerHTML = \"\";\n      for (var letter of allLetters) {\n        // keep white space between words\n        if (letter.match(/\\x20/g)) {\n          selection.innerHTML += ` `;\n        }\n        // don't replace special characters\n        else if (letter.match(/[\\x21-\\x40\\x5B-\\x60\\x7B-\\x7E]/g)) {\n          selection.innerHTML += `<div data-char='.' class='letter'>${letter}</div>`;\n        }\n        // lowercase -> change font\n        else if (letter.match(/[a-z]/g)) {\n          selection.innerHTML += `<div data-char='.' class='letter lowercase'>${letter}</div>`;\n        }\n        // replace each letter with its appropriate size\n        else {\n          let [newLetter, status] = randomLetter(letter);\n\n          if (status)\n            selection.innerHTML += `<div data-char=${newLetter} class='letter'>${letter}</div>`;\n          else\n            selection.innerHTML += `<div data-char='.' class='letter'>${letter}</div>`;\n        }\n      }\n    }\n\n    let tl = gsap.timeline();\n\n    var animation = tl\n      .to(\".search-line_text .letter\", {\n        duration: 2,\n        yPercent: -100,\n        stagger: {\n          // amount: total time\n          // each: each pause\n          amount: 0.5,\n          // from: 'start'\n        },\n        ease: \"expo.out\",\n      })\n\n      .to(\n        \"h1 div:not([data-char='.'])\",\n        {\n          duration: 2,\n          yPercent: -200,\n          stagger: {\n            amount: 1,\n            from: \"edges\",\n          },\n          ease: \"expo.out\",\n        },\n        \"<0.5\"\n      );\n  });\n\n  return (\n    <div ref={animation} className=\"search-onloadpage\">\n      <div className=\"seach-linerow\">\n        <h1 className=\"search-line_text\">{props.text}</h1>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useRef } from \"react\";\nimport Loading from \"../components/Loading\";\nimport { useParams } from \"react-router-dom\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\n\nexport default function SingleCocktail() {\n  const animation = useRef();\n\n  const { id } = useParams();\n  const [loading, setLoading] = React.useState(false);\n  const [cocktail, setCocktail] = React.useState(null);\n\n  React.useEffect(() => {\n    setLoading(true);\n    async function getCocktail() {\n      try {\n        const response = await fetch(\n          `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`\n        );\n        const data = await response.json();\n        if (data.drinks) {\n          const {\n            strMeasure1,\n            strMeasure2,\n            strMeasure3,\n            strMeasure4,\n            strMeasure5,\n            strMeasure6,\n            strMeasure7,\n            strMeasure8,\n            strMeasure9,\n            strMeasure10,\n            strMeasure11,\n            strMeasure12,\n            strMeasure13,\n            strMeasure14,\n            strMeasure15,\n            strDrink: name,\n            strDrinkThumb: image,\n            strAlcoholic: info,\n            strGlass: glass,\n            strInstructions: instructions,\n            strIngredient1,\n            strIngredient2,\n            strIngredient3,\n            strIngredient4,\n            strIngredient5,\n            strIngredient6,\n            strIngredient7,\n            strIngredient8,\n            strIngredient9,\n            strIngredient10,\n            strIngredient11,\n            strIngredient12,\n            strIngredient13,\n            strIngredient14,\n            strIngredient15,\n          } = data.drinks[0];\n\n          const ingredients = [\n            strIngredient1,\n            strIngredient2,\n            strIngredient3,\n            strIngredient4,\n            strIngredient5,\n            strIngredient6,\n            strIngredient7,\n            strIngredient8,\n            strIngredient9,\n            strIngredient10,\n            strIngredient11,\n            strIngredient12,\n            strIngredient13,\n            strIngredient14,\n            strIngredient15,\n          ];\n\n          const measures = [\n            strMeasure1,\n            strMeasure2,\n            strMeasure3,\n            strMeasure4,\n            strMeasure5,\n            strMeasure6,\n            strMeasure7,\n            strMeasure8,\n            strMeasure9,\n            strMeasure10,\n            strMeasure11,\n            strMeasure12,\n            strMeasure13,\n            strMeasure14,\n            strMeasure15,\n          ];\n\n          const newCocktail = {\n            name,\n            image,\n            info,\n            glass,\n            instructions,\n            ingredients,\n          };\n          setCocktail(newCocktail);\n        } else {\n          setCocktail(null);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n      setLoading(false);\n    }\n    getCocktail();\n  }, [id]);\n  if (loading) {\n    return <Loading />;\n  }\n  if (!cocktail) {\n    return (\n      <h2 className=\"error-message\">\n        Sorry, not able to locate cocktail :&#40;\n      </h2>\n    );\n  }\n\n  const { name, image, info, glass, instructions, ingredients, measures } =\n    cocktail;\n\n  return (\n    <div className=\"details-landing-page\">\n      <Header text=\"MIXOLOGY\" />\n      <div className=\"cocktail-detail-container\">\n        <div className=\"cover-ribbon\">\n          <div className=\"cover-ribbon-inside\"> {info}</div>\n        </div>\n        <div className=\"left-side-details\">\n          <img className=\"detail-img\" src={image} alt={name} />\n        </div>\n        <div className=\"right-side-details\">\n          <div className=\"detail-name\">{name}</div>\n          <div className=\"detail-text\">\n            <div className=\"detail-ingredients\">\n              <div className=\"detail-instructions-title\">Ingredients :</div>\n              <ol className=\"ingredients-list\">\n                {ingredients.map((item, index) => {\n                  console.log(ingredients);\n                  return item ? <li key={index}> {item}</li> : null;\n                })}\n              </ol>\n            </div>\n            <div className=\"text-spacer\"></div>\n            <div className=\"detail-glass\">\n              <span className=\"detail-instructions-title\">Glass : &nbsp;</span>\n              {glass}\n            </div>\n            <div className=\"text-spacer\"></div>\n\n            <div className=\"detail-instructions\">\n              <span className=\"detail-instructions-title\">\n                Instructions : &nbsp;\n              </span>\n              {instructions}\n            </div>\n          </div>\n          <div className=\"button-container flex-end\">\n            <Button text=\"Back\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Button from \"../components/Button\";\nimport Header from \"../components/Header\";\n\nexport default function Error() {\n  return (\n    <div class=\"error-page\">\n      <div class=\"button-container error-button\">\n        <Button text=\"Back Home\" link=\"/\" />\n      </div>\n\n      <div class=\"error-container\">\n        <div class=\"error-header\">\n          <Header text=\"WHOOPS! 404\" />\n        </div>\n      </div>\n\n      <div class=\"error-footer\">\n        <span>Seems you are lost</span>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nexport default function Navbar() {\n  return (\n    <nav className=\"navbar\">\n      <Link to=\"/\">\n        <div className=\"home-logo\">cocktails</div>\n      </Link>\n    </nav>\n  );\n}\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { useCallback } from \"react\";\n\nconst AppContext = React.createContext();\nconst url = \"https://www.thecocktaildb.com/api/json/v1/1/search.php?s=\";\nconst AppProvider = ({ children }) => {\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState(\"m\");\n  const [cocktails, setCocktails] = useState([]);\n\n  const fetchDrinks = useCallback(async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(`${url}${searchTerm}`);\n      const data = await response.json();\n      const { drinks } = data;\n      console.log(url);\n      if (drinks) {\n        const newCocktails = drinks.map((item) => {\n          const { idDrink, strDrink, strDrinkThumb, strAlcoholic } = item;\n\n          return {\n            id: idDrink,\n            name: strDrink,\n            image: strDrinkThumb,\n            info: strAlcoholic,\n          };\n        });\n        setCocktails(newCocktails);\n      } else {\n        setCocktails([]);\n      }\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  }, [searchTerm]);\n\n  useEffect(() => {\n    fetchDrinks();\n  }, [searchTerm]);\n  return (\n    <AppContext.Provider\n      value={{ loading, cocktails, searchTerm, setSearchTerm }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nexport default function Cocktail({ image, name, id, info }) {\n  return (\n    <div className=\"book__inner\">\n      <div className=\"book__cover\">\n        <img img src={image} alt={name} />\n      </div>\n      <div class=\"book__content\">\n        <Link to={`/cocktail/${id}`} className=\"link\">\n          <span className=\"mask\">\n            <div className=\"link-container\">\n              <span className=\"link-title1 title\">{name}</span>\n              <span className=\"link-title2 title\">Make It</span>\n            </div>\n          </span>\n          <div className=\"link-icon\">\n            <svg\n              className=\"icon\"\n              width=\"24\"\n              height=\"24\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n            >\n              <path d=\"M21.883 12l-7.527 6.235.644.765 9-7.521-9-7.479-.645.764 7.529 6.236h-21.884v1h21.883z\" />\n            </svg>\n            <svg\n              className=\"icon\"\n              width=\"24\"\n              height=\"24\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n            >\n              <path d=\"M21.883 12l-7.527 6.235.644.765 9-7.521-9-7.479-.645.764 7.529 6.236h-21.884v1h21.883z\" />\n            </svg>\n          </div>\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Cocktail from \"./Cocktail\";\nimport Loading from \"./Loading\";\nimport { useGlobalContext } from \"../context\";\n\nexport default function CocktailList() {\n  const { cocktails, loading } = useGlobalContext();\n  if (loading) {\n    return <Loading />;\n  }\n  if (cocktails.length < 1) {\n    return (\n      <div className=\"error-message\">\n        Sorry I can't seem to find it :&#40;\n      </div>\n    );\n  }\n  return (\n    <div className=\"cocktail-list-container\">\n      {cocktails.map((item) => {\n        return <Cocktail key={item.id} {...item} />;\n      })}\n    </div>\n  );\n}\n","import React, { useRef } from \"react\";\nimport { useGlobalContext } from \"../context\";\nimport CocktailList from \"../components/CocktailList\";\nimport Header from \"../components/Header\";\n\nconst Search = () => {\n  const animation = useRef();\n\n  const { setSearchTerm } = useGlobalContext();\n  const searchValue = React.useRef(\"\");\n\n  function searchCocktail() {\n    setSearchTerm(searchValue.current.value);\n  }\n\n  return (\n    <div className=\"search-landing-page\">\n      <Header text=\"SEARCH\" />\n      <div className=\"search-bar\">\n        <div className=\"search-bar-container\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            ref={searchValue}\n            onChange={searchCocktail}\n            className=\"searchInput\"\n            placeholder=\"So what's on your mind ?\"\n          />\n        </div>\n      </div>\n      <CocktailList />\n    </div>\n  );\n};\n\nexport default Search;\n","import React, { useRef } from \"react\";\nimport Loading from \"../components/Loading\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\n\nconst RandomPage = () => {\n  const animation = useRef();\n\n  const { id } = useParams();\n  const [loading, setLoading] = React.useState(false);\n  const [cocktail, setCocktail] = React.useState(null);\n\n  React.useEffect(() => {\n    setLoading(true);\n    async function getCocktail() {\n      try {\n        const response = await fetch(\n          `https://www.thecocktaildb.com/api/json/v1/1/random.php`\n        );\n        const data = await response.json();\n        if (data.drinks) {\n          const {\n            strMeasure1,\n            strMeasure2,\n            strMeasure3,\n            strMeasure4,\n            strMeasure5,\n            strMeasure6,\n            strMeasure7,\n            strMeasure8,\n            strMeasure9,\n            strMeasure10,\n            strMeasure11,\n            strMeasure12,\n            strMeasure13,\n            strMeasure14,\n            strMeasure15,\n            strDrink: name,\n            strDrinkThumb: image,\n            strAlcoholic: info,\n            strGlass: glass,\n            strInstructions: instructions,\n            strIngredient1,\n            strIngredient2,\n            strIngredient3,\n            strIngredient4,\n            strIngredient5,\n            strIngredient6,\n            strIngredient7,\n            strIngredient8,\n            strIngredient9,\n            strIngredient10,\n            strIngredient11,\n            strIngredient12,\n            strIngredient13,\n            strIngredient14,\n            strIngredient15,\n          } = data.drinks[0];\n\n          const ingredients = [\n            strIngredient1,\n            strIngredient2,\n            strIngredient3,\n            strIngredient4,\n            strIngredient5,\n            strIngredient6,\n            strIngredient7,\n            strIngredient8,\n            strIngredient9,\n            strIngredient10,\n            strIngredient11,\n            strIngredient12,\n            strIngredient13,\n            strIngredient14,\n            strIngredient15,\n          ];\n\n          const measures = [\n            strMeasure1,\n            strMeasure2,\n            strMeasure3,\n            strMeasure4,\n            strMeasure5,\n            strMeasure6,\n            strMeasure7,\n            strMeasure8,\n            strMeasure9,\n            strMeasure10,\n            strMeasure11,\n            strMeasure12,\n            strMeasure13,\n            strMeasure14,\n            strMeasure15,\n          ];\n\n          const newCocktail = {\n            name,\n            image,\n            info,\n            glass,\n            instructions,\n            ingredients,\n          };\n          setCocktail(newCocktail);\n        } else {\n          setCocktail(null);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n      setLoading(false);\n    }\n    getCocktail();\n  }, [id]);\n  if (loading) {\n    return <Loading />;\n  }\n  if (!cocktail) {\n    return <h2 className=\"error-message\">No cocktail to display :&#40;</h2>;\n  }\n\n  const { name, image, info, glass, instructions, ingredients, measures } =\n    cocktail;\n\n  return (\n    <div className=\"details-landing-page\">\n      <Header text = \"MIXOLOGY\"/>\n      <div className=\"cocktail-detail-container\">\n        <div className=\"cover-ribbon\">\n          <div className=\"cover-ribbon-inside\"> {info}</div>\n        </div>\n        <div className=\"left-side-details\">\n          <img className=\"detail-img\" src={image} alt={name} />\n        </div>\n        <div className=\"right-side-details\">\n          <div className=\"detail-name\">{name}</div>\n          <div className=\"detail-text\">\n            <div className=\"detail-ingredients\">\n              <div className=\"detail-instructions-title\">Ingredients :</div>\n              <ol className=\"ingredients-list\">\n                {ingredients.map((item, index) => {\n                  console.log(ingredients);\n                  return item ? <li key={index}> {item}</li> : null;\n                })}\n              </ol>\n            </div>\n            <div className=\"text-spacer\"></div>\n            <div className=\"detail-glass\">\n              <span className=\"detail-instructions-title\">Glass : &nbsp;</span>\n              {glass}\n            </div>\n            <div className=\"text-spacer\"></div>\n\n            <div className=\"detail-instructions\">\n              <span className=\"detail-instructions-title\">\n                Instructions : &nbsp;\n              </span>\n              {instructions}\n            </div>\n          </div>\n          <div className=\"button-container flex-end\">\n            <Button text=\"Back\" link=\"/\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RandomPage;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n// import pages\nimport Home from \"./pages/Home\";\nimport SingleCocktail from \"./pages/SingleCocktail\";\nimport Error from \"./pages/Error\";\n// import components\nimport Navbar from \"./components/Navbar\";\nimport Search from \"./pages/Search\";\nimport RandomPage from \"./pages/RandomPage\";\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"search\" element={<Search />} />\n        <Route path=\"cocktail/:id\" element={<SingleCocktail />} />\n        <Route path=\"random\" element={<RandomPage />} />\n        <Route path=\"*\" element={<Error />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { AppProvider } from './context';\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}